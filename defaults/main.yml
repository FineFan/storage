---
# defaults file for template
#storage_provider: "{{ some_default_service_or_toolset }}"
device_type: "lvm"
fs_type: "xfs"
encryption: false
compression: false
deduplication: false

partition_alignment: "optimal"  # use optimal alignment when creating partitions
overwrite_existing_formatting: false  # clobber existing filesystems when creating new ones
lvm_vg_size: "max"  # make new VGs as large as possible

fs_label_from_name: true  # TODO: be prepared to adjust formatting to meet fs label requirements
fs_create_options: ""
fs_destroy_options: "-af"
---

device_type: "lvm"
device_name: ""  # this can be UUID=<uuid>, /dev/disk/by-*, &c if existing
size: "100%"
disks: []  # use the first unused disk by default, can be /dev/disk/by-*
use_partitions: false

# file system
fs_type: "xfs"
fs_label: ""
fs_create_options: ""
fs_destroy_options: "-af"
fs_overwrite_existing: true

# mount
mount_point: ""
mount_options: ""
mount_check: 0
mount_passno: 0
mount_device_identifier: "uuid"  # uuid|label

# encryption
# should these be namespaced under 'luks' instead?
encryption: false
encryption_key_size: ""
encryption_key_file: ""
encryption_passphrase: ""
encryption_cipher: ""

# data optimization
compression: false
deduplication: true

# raid
# chunk_size and spares might be md-specific, so should they
# be namespaced under 'md' instead?
raid_level: ""
raid_chunk_size: ""
raid_spares: ""
raid_metadata: "default"

# partitioning
partition_table_type: "gpt"
partition_alignment: "optimal"
partition_type: "normal"  # normal, extended (dos-only), logical (dos-only)
partition_start: ""
partition_number: ""
partition_flags: []

# lvm
lvm_type: "linear"
lvm_vg: ""
lvm_vg_size: "max"
lvm_pool: ""
# Can the below be handled via generic 'lv_options' and 'vg_options'?
#lvm_origin: ""
#lvm_pvs: []
#lvm_extent_size: ""
#lvm_extent_start: ""
#lvm_data_alignment: ""
