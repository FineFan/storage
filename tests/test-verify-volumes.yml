---
- name: Read the /etc/fstab file for volume existence
  command: cat /etc/fstab
  register: fstab_buffer
  changed_when: false

- name: Verify the volumes listed in storage_pools were correctly managed
  include_tasks: "{{ current_pool.state is search('absent') | bool | ternary('test-volumes-absent-helper.yml', 'test-volumes-present-helper.yml') }}"
  loop: "{{ _storage_pools_list }}"
  loop_control:
    loop_var: current_pool
  when: _storage_pools_list is defined and _storage_pools_list | length > 0

- resolve_blockdev:
    spec: "{{ dev_id }}"
  loop: "{{ ansible_mounts|map(attribute='device')|list }}"
  loop_control:
    loop_var: dev_id
  register: resolve_ansible_mount_devs

- set_fact:
    ansible_mount_devs: "{{ resolve_ansible_mount_devs.results|map(attribute='device')|list }}"
    present_volumes: "{{ blivet_output.volumes|selectattr('state', 'equalto', 'present')|list }}"
    absent_volumes: "{{ blivet_output.volumes|selectattr('state', 'equalto', 'absent')|list }}"

- block:
  - name: Verify the volumes with no pool were correctly managed
    assert:
      that:
        - "{{ current_volume.mount_point in fstab_buffer.stdout if current_volume.state == 'present' \
              else current_volume.mount_point not in fstab_buffer.stdout }}"
      msg: "The /etc/fstab entry for storage volume {{ current_volume.name }} was incorrectly managed."
    loop: "{{ _storage_volumes_list }}"
    loop_control:
      loop_var: current_volume
  when: _storage_volumes_list is defined and _storage_volumes_list | length > 0

- block:
  - name: Verify the present volumes with no pool were correctly managed
    assert:
      that:
        - "{{ current_volume['name'] == present_volumes[idx]['name'] }}"
        - "{{ ansible_mount_devs|select('equalto', present_volumes[idx]['_device'])|list|length==1 }}"
      msg: "The file system mount for storage volume {{ current_volume.name }} was incorrectly managed."
    loop: "{{ _storage_volumes_list|selectattr('state', 'equalto', 'present')|list }}"
    loop_control:
      loop_var: current_volume
      index_var: idx
  when: _storage_volumes_list is defined and _storage_volumes_list | length > 0

# Any volume whose state is absent should not have any entries in ansible_mounts.
- block:
  - name: Verify the absent volumes with no pool are not in ansible_mounts
    assert:
      that:
        - "{{ current_volume['name'] == absent_volumes[idx]['name'] }}"
        - "{{ ansible_mount_devs|select('equalto', absent_volumes[idx]['_device'])|list|length==0 }}"
      msg: "The file system mount for storage volume {{ current_volume.name }} was incorrectly managed."
    loop: "{{ _storage_volumes_list|selectattr('state', 'equalto', 'absent')|list }}"
    loop_control:
      loop_var: current_volume
      index_var: idx
  when: _storage_volumes_list is defined and _storage_volumes_list | length > 0
